// Generated by view binder compiler. Do not edit!
package com.example.mynewsapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mynewsapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityNewsDetailsBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView idIVNews;

  @NonNull
  public final TextView idTVContent;

  @NonNull
  public final TextView idTVSubDesc;

  @NonNull
  public final TextView idTVTitle;

  @NonNull
  public final ImageView mic;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final WebView webView;

  @NonNull
  public final ProgressBar webViewLoader;

  private ActivityNewsDetailsBinding(@NonNull RelativeLayout rootView, @NonNull ImageView idIVNews,
      @NonNull TextView idTVContent, @NonNull TextView idTVSubDesc, @NonNull TextView idTVTitle,
      @NonNull ImageView mic, @NonNull Toolbar toolbar, @NonNull WebView webView,
      @NonNull ProgressBar webViewLoader) {
    this.rootView = rootView;
    this.idIVNews = idIVNews;
    this.idTVContent = idTVContent;
    this.idTVSubDesc = idTVSubDesc;
    this.idTVTitle = idTVTitle;
    this.mic = mic;
    this.toolbar = toolbar;
    this.webView = webView;
    this.webViewLoader = webViewLoader;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityNewsDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityNewsDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_news_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityNewsDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.idIVNews;
      ImageView idIVNews = ViewBindings.findChildViewById(rootView, id);
      if (idIVNews == null) {
        break missingId;
      }

      id = R.id.idTVContent;
      TextView idTVContent = ViewBindings.findChildViewById(rootView, id);
      if (idTVContent == null) {
        break missingId;
      }

      id = R.id.idTVSubDesc;
      TextView idTVSubDesc = ViewBindings.findChildViewById(rootView, id);
      if (idTVSubDesc == null) {
        break missingId;
      }

      id = R.id.idTVTitle;
      TextView idTVTitle = ViewBindings.findChildViewById(rootView, id);
      if (idTVTitle == null) {
        break missingId;
      }

      id = R.id.mic;
      ImageView mic = ViewBindings.findChildViewById(rootView, id);
      if (mic == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.webView;
      WebView webView = ViewBindings.findChildViewById(rootView, id);
      if (webView == null) {
        break missingId;
      }

      id = R.id.webViewLoader;
      ProgressBar webViewLoader = ViewBindings.findChildViewById(rootView, id);
      if (webViewLoader == null) {
        break missingId;
      }

      return new ActivityNewsDetailsBinding((RelativeLayout) rootView, idIVNews, idTVContent,
          idTVSubDesc, idTVTitle, mic, toolbar, webView, webViewLoader);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
