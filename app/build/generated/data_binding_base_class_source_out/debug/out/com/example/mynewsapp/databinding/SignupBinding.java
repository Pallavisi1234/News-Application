// Generated by data binding compiler. Do not edit!
package com.example.mynewsapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.example.mynewsapp.R;
import com.google.android.material.button.MaterialButton;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class SignupBinding extends ViewDataBinding {
  @NonNull
  public final MaterialButton Signupbtn;

  @NonNull
  public final Button btnlogin;

  @NonNull
  public final EditText email;

  @NonNull
  public final ImageView fb;

  @NonNull
  public final ImageView google;

  @NonNull
  public final LinearLayout icons;

  @NonNull
  public final TextView info;

  @NonNull
  public final CircleImageView ivDP;

  @NonNull
  public final EditText password;

  @NonNull
  public final ProgressBar pbLoading;

  @NonNull
  public final EditText repassword;

  @NonNull
  public final TextView tvSignUp;

  @NonNull
  public final EditText username;

  protected SignupBinding(Object _bindingComponent, View _root, int _localFieldCount,
      MaterialButton Signupbtn, Button btnlogin, EditText email, ImageView fb, ImageView google,
      LinearLayout icons, TextView info, CircleImageView ivDP, EditText password,
      ProgressBar pbLoading, EditText repassword, TextView tvSignUp, EditText username) {
    super(_bindingComponent, _root, _localFieldCount);
    this.Signupbtn = Signupbtn;
    this.btnlogin = btnlogin;
    this.email = email;
    this.fb = fb;
    this.google = google;
    this.icons = icons;
    this.info = info;
    this.ivDP = ivDP;
    this.password = password;
    this.pbLoading = pbLoading;
    this.repassword = repassword;
    this.tvSignUp = tvSignUp;
    this.username = username;
  }

  @NonNull
  public static SignupBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.signup, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static SignupBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<SignupBinding>inflateInternal(inflater, R.layout.signup, root, attachToRoot, component);
  }

  @NonNull
  public static SignupBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.signup, null, false, component)
   */
  @NonNull
  @Deprecated
  public static SignupBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<SignupBinding>inflateInternal(inflater, R.layout.signup, null, false, component);
  }

  public static SignupBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static SignupBinding bind(@NonNull View view, @Nullable Object component) {
    return (SignupBinding)bind(component, view, R.layout.signup);
  }
}
